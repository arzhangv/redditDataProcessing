{
    "op": {
        "upvote_ratio": null,
        "selftext": "I want to know which is the best langauge for malwares coding between C and C++ ",
        "title": "C or C++ for malwares coding ?",
        "score": 0,
        "id": "6t9edn",
        "commsNum": 23,
        "timeStamp": "2017/08/12-09:33:02",
        "author_name": "_YACINE_",
        "is_self": true,
        "locked": false,
        "num_comments": 23,
        "over_18": false,
        "spoiler": false,
        "subreddit": "malware",
        "stickied": false,
        "url": "https://www.reddit.com/r/Malware/comments/6t9edn/c_or_c_for_malwares_coding/"
    },
    "posts": {
        "dlr2t0e": {
            "comment": "Oh I stand corrected! Thank u for explaining!",
            "timeStamp": "2017/08/17-07:19:16",
            "id": "dlr2t0e",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlr2bhe",
            "score": 1,
            "stickied": false,
            "author_name": "LifeInKernelSpace"
        },
        "dlr2bhe": {
            "comment": "Not quite -- structures don't have methods and are essentially arrays with different datatypes.\n\nCompiled C++ sees classes split into several parts. There are the variables of the class, which are, as you stated, turned into C-style structs. However, there are also methods, which are compiled into regular functions that take one extra argument: the *this* pointer, or the pointer to that particular function's struct.\n\nFor virtual classes and inheritance, it gets a little more complicated. All of the virtual functions are compiled into a vtable of function pointers at the beginning of each struct. So if you want to access the second virtual function, you call that pointer and it takes you to whatever function that instance of the object is.\n\nFor multiple inheritance, it's even more complex than that, and frankly I don't do enough C++ reversing to be familiar with it. [Here](https://www.blackhat.com/presentations/bh-dc-07/Sabanal_Yason/Paper/bh-dc-07-Sabanal_Yason-WP.pdf) is a very good PDF that I use as a reference when I come across C++ binaries.\n\nThe point of all this is that what constitutes an \"object\" is much more complex than just a list of variables and there is a whole other layer of abstraction above the struct to make an object.",
            "timeStamp": "2017/08/17-07:09:45",
            "id": "dlr2bhe",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlr1xfj",
            "score": 2,
            "stickied": false,
            "author_name": "Yapoz"
        },
        "dlr1xfj": {
            "comment": "But aren't structures objects?",
            "timeStamp": "2017/08/17-07:01:49",
            "id": "dlr1xfj",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlqtbmo",
            "score": 1,
            "stickied": false,
            "author_name": "LifeInKernelSpace"
        },
        "dlqtbmo": {
            "comment": "This is incorrect. C++ is an object oriented programming language, whereas C is an imperative one.",
            "timeStamp": "2017/08/17-02:46:13",
            "id": "dlqtbmo",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dllef09",
            "score": 1,
            "stickied": false,
            "author_name": "Yapoz"
        },
        "dlmo7el": {
            "comment": "Yes and no. Some of you don't seem to be aware that you can literally create a static binary with Cython and the GCC compiler (or even the Visual Studio one). When you convert your python script to C with Cython, use the --embed argument. Then you can compile to a static binary with GCC or CL.\n\nThe only caveat is that if you are using modules other than the ones from the standard library (such as pywin32 which would be useful for a python malware) it would require the DLLs as dependencies so it would not be very portable. As far as I know there is no way to statically link the librairies but I never tried to do it so don't take my word for it.",
            "timeStamp": "2017/08/14-16:39:11",
            "id": "dlmo7el",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljz3ot",
            "score": 1,
            "stickied": false,
            "author_name": "tr4cefl0w"
        },
        "dllef09": {
            "comment": "C and C++ are basically the same, apart from the standard library, and classes. If you need to use classes, or the c++ standard library then use C++, otherwise use C.",
            "timeStamp": "2017/08/13-23:05:01",
            "id": "dllef09",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t3_6t9edn",
            "score": 0,
            "stickied": false,
            "author_name": "LifeInKernelSpace"
        },
        "dlk1px0": {
            "comment": "I never used cython but I thought it made possible to load extension from shared library like nodejs... I don't think python is great because of the huge footprint. However, it might be great for some case like on Linux based systems.",
            "timeStamp": "2017/08/13-04:24:58",
            "id": "dlk1px0",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlk0wpd",
            "score": 1,
            "stickied": false,
            "author_name": "01BTC10"
        },
        "dlk0wpd": {
            "comment": "The interpreter is written in C, but it still executes python bytecode that can be ripped. CPython interpreter can call C functions like Jython can call Java function. It is a bridge between your code and your OS abi",
            "timeStamp": "2017/08/13-03:46:12",
            "id": "dlk0wpd",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlk0jdy",
            "score": 2,
            "stickied": false,
            "author_name": "RandomGoatLover"
        },
        "dlk0px8": {
            "comment": "Well, my reasoning is maybe it makes for really well obfuscated code or something else? C'mon dawg, no need to be a dick.",
            "timeStamp": "2017/08/13-03:36:35",
            "id": "dlk0px8",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljrpu0",
            "score": 2,
            "stickied": false,
            "author_name": "CapitalismIsFascism"
        },
        "dlk0jdy": {
            "comment": "http://cython.org/\n\n&gt; The Cython language is a superset of the Python language that additionally supports calling C functions and declaring C types on variables and class attributes. This allows the compiler to generate very efficient C code from Cython code. The C code is generated once and then compiles with all major C/C++ compilers in CPython 2.6, 2.7 (2.4+ with Cython 0.20.x) as well as 3.2 and all later versions. \n\nhttps://en.wikipedia.org/wiki/CPython\n\n&gt; CPython is the reference implementation of the Python programming language. Written in C, CPython is the default and most widely used implementation of the language.",
            "timeStamp": "2017/08/13-03:27:14",
            "id": "dlk0jdy",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlk0cqe",
            "score": 2,
            "stickied": false,
            "author_name": "01BTC10"
        },
        "dlk0cqe": {
            "comment": "You can do that but its easy to rip out the original files and decompile them. py2exe has a built in util to extract .pyc iirc and python has a library for decompiling .pyc files.",
            "timeStamp": "2017/08/13-03:17:42",
            "id": "dlk0cqe",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlk012z",
            "score": 2,
            "stickied": false,
            "author_name": "hi117"
        },
        "dlk012z": {
            "comment": "You have to compile the python runtime in with the binary, but the whole thing compiles to x86 to run on windows without any prerequisites.  http://www.py2exe.org/",
            "timeStamp": "2017/08/13-03:01:14",
            "id": "dlk012z",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljz4r2",
            "score": -1,
            "stickied": false,
            "author_name": "Memorantix"
        },
        "dljzwxh": {
            "comment": "Um how is fin selling to oppressive regimes relevant? So because the malware is new that makes it cutting edge? Lol nope. I can make new malware that uses old techniques that go undetected. Nothing cutting edge about that. Get real. See Stuxnet, flame, gauss, duqu. Those we're all cutting edge. Let's see underground shitheads make anything remotely close to that. ",
            "timeStamp": "2017/08/13-02:55:30",
            "id": "dljzwxh",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljvhkl",
            "score": 4,
            "stickied": false,
            "author_name": "siliconmon"
        },
        "dljz4r2": {
            "comment": "You are only embedding the python vm iirc not compiling to C",
            "timeStamp": "2017/08/13-02:16:02",
            "id": "dljz4r2",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljz3ot",
            "score": 3,
            "stickied": false,
            "author_name": "RandomGoatLover"
        },
        "dljz3ot": {
            "comment": "You can compile python to C",
            "timeStamp": "2017/08/13-02:14:34",
            "id": "dljz3ot",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljyc4r",
            "score": -3,
            "stickied": false,
            "author_name": "Memorantix"
        },
        "dljyc4r": {
            "comment": "With python you can look at the source too easily. And not everyone has python installed on his machine",
            "timeStamp": "2017/08/13-01:37:38",
            "id": "dljyc4r",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljwueo",
            "score": 2,
            "stickied": false,
            "author_name": "RandomGoatLover"
        },
        "dljwueo": {
            "comment": "What about Python? ",
            "timeStamp": "2017/08/13-00:31:31",
            "id": "dljwueo",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t3_6t9edn",
            "score": 3,
            "stickied": false,
            "author_name": "Mrj2alt"
        },
        "dljvhkl": {
            "comment": "&gt; This simply isn't true. Cutting edge malware requires multiple devs with routine maintenance. Anything less isn't cutting edge. Oh and they still write in C++ and C. Real cutting edge authors use C for kernel modules and C++ for userland stuff, but really once you run code in kernel you can run anything on the system and simply hide it presence (rootkits).  So both are still used for different purposes. See hacking team RCS, see Finspy, see Uroburos. All are cutting edge examples written in C/C++.\n\nFinFisher is at least 3 years old (Uroburos is closer to 10), and Hacking Team are literally government shills that sell RATs to fascists.\n\nWhen I said cutting edge, I wasn't referring to things that have articles written about them in the New York Post, or things that Dan Rather's replacement is reporting on. I was talking about the newest, most underground malware that's being produced (right this second).",
            "timeStamp": "2017/08/12-23:38:21",
            "id": "dljvhkl",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljpr34",
            "score": 4,
            "stickied": false,
            "author_name": "reshok"
        },
        "dljrpu0": {
            "comment": "Chef is a programming language that makes code look like cooking recipes, Also didn't the fact he said AsciiDots not be a huge red flag to you that he's not being serious? lol",
            "timeStamp": "2017/08/12-21:39:04",
            "id": "dljrpu0",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dljcgbd",
            "score": 9,
            "stickied": false,
            "author_name": "Hasherss"
        },
        "dljpr34": {
            "comment": "This simply isn't true. Cutting edge malware requires multiple devs with routine maintenance. Anything less isn't cutting edge. Oh and they still write in C++ and C. Real cutting edge authors use C for kernel modules and C++ for userland stuff, but really once you run code in kernel you can run anything on the system and simply hide it presence (rootkits).  So both are still used for different purposes. See hacking team RCS, see Finspy, see Uroburos. All are cutting edge examples written in C/C++.",
            "timeStamp": "2017/08/12-20:46:10",
            "id": "dljpr34",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlixpal",
            "score": -6,
            "stickied": false,
            "author_name": "siliconmon"
        },
        "dljjzby": {
            "comment": "[removed]",
            "timeStamp": "2017/08/12-18:28:08",
            "id": "dljjzby",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlixpal",
            "score": 1,
            "stickied": false,
            "author_name": "[deleted]"
        },
        "dljcgbd": {
            "comment": "This is the first I've ever heard of using Chef or Piet for malware writing - could you expand on why they're used and share a couple examples? I'm very interested in learning more.",
            "timeStamp": "2017/08/12-15:33:31",
            "id": "dljcgbd",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlixpal",
            "score": -2,
            "stickied": false,
            "author_name": "CapitalismIsFascism"
        },
        "dlj1err": {
            "comment": "[deleted]",
            "timeStamp": "2017/08/12-11:34:09",
            "id": "dlj1err",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t3_6t9edn",
            "score": -12,
            "stickied": false,
            "author_name": "[deleted]"
        },
        "dlizt0l": {
            "comment": "This is really the best response you can hope for. Grade A advice.",
            "timeStamp": "2017/08/12-10:58:35",
            "id": "dlizt0l",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlixpal",
            "score": 19,
            "stickied": false,
            "author_name": "byteguard"
        },
        "dliy0ce": {
            "comment": "Have you got examples of malware written in Chef and Piet?",
            "timeStamp": "2017/08/12-10:19:21",
            "id": "dliy0ce",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t1_dlixpal",
            "score": 2,
            "stickied": false,
            "author_name": "payne747"
        },
        "dlixpal": {
            "comment": "C based languages for writing malware have fallen out of style, for good reason.\n\nCutting edge malware writers are using Chef, Piet, and the like. This is so that during malware analysis, it is much more difficult to determine what the malware is actually doing.\n\nI'd recommend starting out with AsciiDots - its graphical nature and buttery smooth toolchain make it easily accessible to beginners. You can move on to more advanced languages after you have a handle on AsciiDots.",
            "timeStamp": "2017/08/12-10:12:41",
            "id": "dlixpal",
            "is_submitter": false,
            "link_id": "t3_6t9edn",
            "parent_id": "t3_6t9edn",
            "score": 28,
            "stickied": false,
            "author_name": "reshok"
        }
    }
}