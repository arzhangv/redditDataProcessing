{
    "op": {
        "upvote_ratio": 1.0,
        "selftext": "Does anyone have a reliable method of converting a dll file into an exe?\n\nI\u2019m trying to analyse a stage 2 payload which is a dll file, I\u2019ve only ever analysed exe files previously and from what I\u2019ve read the preferred method of analysing dll files is to convert them into an exe (but where I read that from a technique for doing so is not explained). Can anyone help please?\n\nThanks",
        "title": "DLL to exe",
        "score": 1,
        "id": "r9jhb5",
        "commsNum": 19,
        "timeStamp": "2021/12/05-08:38:07",
        "author_name": "JoeBeOneKenobi",
        "is_self": true,
        "locked": false,
        "num_comments": 19,
        "over_18": false,
        "spoiler": false,
        "subreddit": "malware",
        "stickied": false,
        "url": "https://www.reddit.com/r/Malware/comments/r9jhb5/dll_to_exe/"
    },
    "posts": {
        "hos2puk": {
            "comment": "Yeah I realised recently after sending this that the DllMain export was a possibility. In this instance I guess I was more focused on the distinction between DLL and exe regarding imports, exports etc...\n\nThanks for the link. Useful repo.",
            "timeStamp": "2021/12/16-05:49:29",
            "id": "hos2puk",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hos1mwc",
            "score": 1,
            "stickied": false,
            "author_name": "micropeenandproud"
        },
        "hos1mwc": {
            "comment": "&gt; there is no entry point or \"starting point\" so you have to specify a function name.\n\nhttps://github.com/MicrosoftDocs/cpp-docs/blob/main/docs/build/run-time-library-behavior.md\n\n&gt; In Windows, all DLLs can contain an optional entry-point function, usually called DllMain, that is called for both initialization and termination. \n\nSome famous icon processing software does that as protection. When Windows loader loads the dll, the dll checks for some file integrity. In case it fails, dll loading fails and you get a Windows error message, not a message generated by the software itself, thats quite clever. Malicious code can indeed be used in DllMain.",
            "timeStamp": "2021/12/16-05:40:33",
            "id": "hos1mwc",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hncm8mg",
            "score": 1,
            "stickied": false,
            "author_name": "RCEdude"
        },
        "ho3kpce": {
            "comment": "That\u2019s great, I\u2019ll check it out, thanks",
            "timeStamp": "2021/12/11-00:25:34",
            "id": "ho3kpce",
            "is_submitter": true,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_ho2np4h",
            "score": 2,
            "stickied": false,
            "author_name": "JoeBeOneKenobi"
        },
        "ho2np4h": {
            "comment": "U can use the PEConv library like this open-source tool https://github.com/hasherezade/dll_to_exe \n\nBut also BTW just a quick tip: If you just want to execute &amp; run it (as opposed to actually converting the file format and content and shit) You can generally run .dll's by just drag and dropping them to ur Terminal or Command-Line of choice or on Windows-only the built-in cmd.exe or Windows Terminal from MS Store. Likely possible with a Windows PowerShell / powershell.exe or PowerShell Core / pwsh.exe too. Assuming u have Admin priveleges ofc",
            "timeStamp": "2021/12/10-19:01:05",
            "id": "ho2np4h",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t3_r9jhb5",
            "score": 2,
            "stickied": false,
            "author_name": "Skyline9Time"
        },
        "hnh34et": {
            "comment": "[removed]",
            "timeStamp": "2021/12/06-08:25:03",
            "id": "hnh34et",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t3_r9jhb5",
            "score": 1,
            "stickied": false,
            "author_name": "[deleted]"
        },
        "hnfms91": {
            "comment": "That\u2019s what I think was happening when I was attempting to analyse this sample last night!\n\nI was trying to break on VirtualAlloc but like you say it wouldn\u2019t break and I couldn\u2019t work out why.\n\nThanks I\u2019ll look into that today!",
            "timeStamp": "2021/12/05-23:24:11",
            "id": "hnfms91",
            "is_submitter": true,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hnfd7fs",
            "score": 1,
            "stickied": false,
            "author_name": "JoeBeOneKenobi"
        },
        "hnfd7fs": {
            "comment": "x32/x64dbg does the same thing as olly, if you install shell extensions you can even right click a .dll and \"open in x64dbg\". You have to change options to break on each loaded dll because it just loads all the dependencies and then unloads and exits.",
            "timeStamp": "2021/12/05-21:36:14",
            "id": "hnfd7fs",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hncdbgc",
            "score": 2,
            "stickied": false,
            "author_name": "twat_muncher"
        },
        "hnf23ka": {
            "comment": "Yes rundll32 is useful to run dll and set breakpoints in it. Using a debugger like ida/ windbg with the combination of rundll32 as the application can allow for a cool debugging experience.",
            "timeStamp": "2021/12/05-19:56:18",
            "id": "hnf23ka",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hnclt4g",
            "score": 1,
            "stickied": false,
            "author_name": "Sentor9199"
        },
        "hnezwfh": {
            "comment": "[deleted]",
            "timeStamp": "2021/12/05-19:39:34",
            "id": "hnezwfh",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hnctpa2",
            "score": 1,
            "stickied": false,
            "author_name": "[deleted]"
        },
        "hnctpa2": {
            "comment": "How is the entry point derived? Is that specified in the initial doc that delivers the powershell?\n\nIf so, is there anyway we can ascertain the entry point when we just have the dll?\n\n(AV on my host machine is preventing me downloading the from the malicious domains and it\u2019s my one and only laptop so I\u2019m reluctant to turn av off)",
            "timeStamp": "2021/12/05-10:55:33",
            "id": "hnctpa2",
            "is_submitter": true,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hnct6hr",
            "score": 1,
            "stickied": false,
            "author_name": "JoeBeOneKenobi"
        },
        "hnctc17": {
            "comment": "That\u2019s awesome, I\u2019ll have a look\n\nThanks very much",
            "timeStamp": "2021/12/05-10:53:15",
            "id": "hnctc17",
            "is_submitter": true,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hnct6hr",
            "score": 3,
            "stickied": false,
            "author_name": "JoeBeOneKenobi"
        },
        "hnct6hr": {
            "comment": "yeah so with new emotet, the stage 2 payload is a dll with a certain entry point to start at.\n\nI imagine this sample might have been automatically unpacked by a sandbox and just hashed and uploaded without verifying. Might've just been borked during unpacking.\n\nTry this eeb13cd51faa7c23d9a40241d03beb239626fbf3efe1dbbfa3994fc10dea0827. I know it to be a good unpacked sample for the main payload of new emotet. Can download it from malshare, and probably other places if that's a pain.",
            "timeStamp": "2021/12/05-10:52:17",
            "id": "hnct6hr",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hncrwwx",
            "score": 2,
            "stickied": false,
            "author_name": "micropeenandproud"
        },
        "hncrwwx": {
            "comment": "That explains a lot! Thanks! Appreciate you looking into it.\n\nI thought it might be because it\u2019s packed?\n\nI\u2019ll have a look at more emotet samples, on malware bazaar all the stage 2 payloads seem to be dll rather than exe.",
            "timeStamp": "2021/12/05-10:44:30",
            "id": "hncrwwx",
            "is_submitter": true,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hncrbsg",
            "score": 2,
            "stickied": false,
            "author_name": "JoeBeOneKenobi"
        },
        "hncrbsg": {
            "comment": "So in the case of normal exes and DLLs, you'd expect DLLs to have a bunch of exports (the different functions of the library) and an EXE file to have simply one export named \"entry\" which windows knows to call as the beginning of the code.\n\nYour sample actually seems pretty messed up/corrupt and doesn't look to be in a state that it could execute. Bad section sizes, only has one export, the DllEntryPoint but it seems to not have proper code in it. Will ask around and see if it can be fixed but maybe try a different sample\n\nEdit: have personally not heard converting to an exe ever be suggested as that's a bit of a strange thing to do,  but perhaps if the DLL only has a single export then it could technically be worth doing if only to get it to run in a sandbox. But even to do that you'd have to know the entry (main) function name to do so",
            "timeStamp": "2021/12/05-10:41:01",
            "id": "hncrbsg",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hncn558",
            "score": 4,
            "stickied": false,
            "author_name": "micropeenandproud"
        },
        "hncn558": {
            "comment": "Hi, thanks for the detailed reply.\n\nWhen i look at the dll in pestudio i can't see any exports, i assumed this was because it's a dll and thought if it was an exe i'd be able to see these.\n\nSee the screen shot below.\n\nThe dll is actually an emotet sample i downloaded from malware bazaar.\n\nI'm just wondering how i can extract and useful artefacts from it, and any guides i've read suggest the dll -&gt; exe as a good first step.\n\nlooks like my screenshot got removed! If you're interested the sha256 hash is 5e3312cc82d10726c4e7063365df227356abe27e24f782ed1327f4a3bf3fcdbf",
            "timeStamp": "2021/12/05-10:16:48",
            "id": "hncn558",
            "is_submitter": true,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hncm8mg",
            "score": 2,
            "stickied": false,
            "author_name": "JoeBeOneKenobi"
        },
        "hncm8mg": {
            "comment": "Just to clarify what some others have said: exe files and DLL files are essentially the same thing. They are compiled windows binaries full of functions.\n\nThe difference lies in exe files being designed to be  \"executable\". This is the case because they have a \"main\" function also known as an entry point that is the first function to be executed when you run it. So exe files have a \"starting point\". If you ever program, this is the first function that appears when you create a new project. For example a new c++ project in visual studio will start with an empty main() function and you begin your code within there.\n\nDLL files on the other hand simply have a bunch of \"exports\" which are just named functions that can be called. However, as dll files are designed to simply be libraries of functions, there is no entry point or \"starting point\" so you have to specify a function name.\n\nYou may sometimes see this with malware in the form of rundll32.exe yourfile.exe function_name_3 etc... where the malware will have a specific function in which the code begins",
            "timeStamp": "2021/12/05-10:11:09",
            "id": "hncm8mg",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t3_r9jhb5",
            "score": 13,
            "stickied": false,
            "author_name": "micropeenandproud"
        },
        "hnclt4g": {
            "comment": "Couldn't rundll32 be used instead?",
            "timeStamp": "2021/12/05-10:08:30",
            "id": "hnclt4g",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t3_r9jhb5",
            "score": 17,
            "stickied": false,
            "author_name": "HSasaki"
        },
        "hncffda": {
            "comment": "https://github.com/hasherezade/dll_to_exe",
            "timeStamp": "2021/12/05-09:26:03",
            "id": "hncffda",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t3_r9jhb5",
            "score": 7,
            "stickied": false,
            "author_name": "Egesploit"
        },
        "hncf70t": {
            "comment": "[removed]",
            "timeStamp": "2021/12/05-09:24:33",
            "id": "hncf70t",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t3_r9jhb5",
            "score": 1,
            "stickied": false,
            "author_name": "[deleted]"
        },
        "hncdbgc": {
            "comment": "Ok great, thanks for the advice I\u2019ll give it a go.\n\nI tend to use x32dbg instead of ollydbg but I\u2019m sure I\u2019ll be able to find an equivalent",
            "timeStamp": "2021/12/05-09:12:09",
            "id": "hncdbgc",
            "is_submitter": true,
            "link_id": "t3_r9jhb5",
            "parent_id": "t1_hnccsrt",
            "score": 3,
            "stickied": false,
            "author_name": "JoeBeOneKenobi"
        },
        "hnccsrt": {
            "comment": "Well if the dll is normal library and contain functions, converting it to exe won't help and it also depends on the language which is written in.\n\nYou can search for dll loader and use it with debugger. Ollydbg had one.\n\nYou can try to call the functions inside it and see what happens.",
            "timeStamp": "2021/12/05-09:08:40",
            "id": "hnccsrt",
            "is_submitter": false,
            "link_id": "t3_r9jhb5",
            "parent_id": "t3_r9jhb5",
            "score": 12,
            "stickied": false,
            "author_name": "Lol_Cy"
        }
    }
}