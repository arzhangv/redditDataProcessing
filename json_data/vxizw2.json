{
    "op": {
        "upvote_ratio": 1.0,
        "selftext": "What's the best tool for keeping track of unknown (at the time) Windows malware that gets used, run and then deleted but later becomes known?\n\nI'm assuming there's a tool that keeps track of file hashes that can backtest everything that was ever run on a machine periodically.",
        "title": "Detecting unknown (at the time) malware that later becomes known",
        "score": 1,
        "id": "vxizw2",
        "commsNum": 0,
        "timeStamp": "2022/07/12-12:10:07",
        "author_name": "EVE-Tekka",
        "is_self": true,
        "locked": false,
        "num_comments": 0,
        "over_18": false,
        "spoiler": false,
        "subreddit": "malware",
        "stickied": false,
        "url": "https://www.reddit.com/r/Malware/comments/vxizw2/detecting_unknown_at_the_time_malware_that_later/"
    },
    "posts": {
        "ig2bod3": {
            "comment": "&gt; This issue follows to cloud services as well. If I were to use a stolen credit card and host a C2 server in Azure, I leverage Microsoft\u2019s credibility to an extent for malicious purposes. I can have domains that end in Microsoft, IPs whose block is owned by Microsoft (whois), CDN networks and more.\n\nInteresting thanks, while a lot of stuff like buying a C2 server in Azure is \"possible\" are you able to estimate the percentage of successful attacks that go this far?  I'm guessing that ransomware affiliates might be most likely to go that far because the stakes are very high at a personal level, but I might be wrong.",
            "timeStamp": "2022/07/13-17:23:09",
            "id": "ig2bod3",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ig1xzgl",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ig1xzgl": {
            "comment": "Happy to help! I wish I spent more time collaborating with others on these topics.\n\nDNS is a really great source of high fidelity low volume data so it gets focused on quite a bit, and in my opinion rightfully so. If your hosts are reaching out to a known malicious domain it\u2019s very suspicious.\n\nFor my own work it\u2019s more of an inclusive indicator then an exclusive. IE: if a host reaches out to resolve a known malicious domain, it\u2019s a strong indication of compromise. But the lack thereof does not tell me the host is \u201cnot infected\u201d. \n\nA use case for example is malware using common shares services as a C2 channel. A tweet, a photo on instagram, a YouTube comment, or messaging services like telegram, Snapchat, etc can be just as good at sending and receiving data then your own hosted server and you\u2019ll avoid detection if all people look at is DNS as you\u2019ll be back to the issue I mentioned previously about the need to split indicators into \u201cgood\u201d and \u201cbad\u201d.\n\nThis issue follows to cloud services as well. If I were to use a stolen credit card and host a C2 server in Azure, I leverage Microsoft\u2019s credibility to an extent for malicious purposes.  I can have domains that end in Microsoft, IPs whose block is owned by Microsoft (whois), CDN networks and more.",
            "timeStamp": "2022/07/13-15:43:06",
            "id": "ig1xzgl",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifyfxua",
            "score": 1,
            "stickied": false,
            "author_name": "TastyRobot21"
        },
        "ifyh57r": {
            "comment": "It seems to get worse every year, I still get free game time from referral links dotted around all over the place but I really don't play anymore.  I take a look at it once a year and it's just \"nope\", not for me anymore.",
            "timeStamp": "2022/07/12-22:39:42",
            "id": "ifyh57r",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifygj0i",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ifygj0i": {
            "comment": "Damn, I wish I could play that game like it was 2012 again.",
            "timeStamp": "2022/07/12-22:32:44",
            "id": "ifygj0i",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifx5dy2",
            "score": 1,
            "stickied": false,
            "author_name": "Rolandooo"
        },
        "ifyfxua": {
            "comment": "I think you just saved me a lot of time.  Based on everything you said here it's BIOC that aligns best with what I was thinking about for ML.\n\nIn fact it was Cloudflare teams ZTN gateway analytics that has a DNS lookup Top 5 and Bottom 5 and it was the bottom 5 that really got me thinking about all this and outliers etc.\n\nWith a ton of common requests the bottom 5 is very interesting to look at.  But then it's interesting that you're not sold on the BIOC because it's hit and miss.  I guess I need to play around with all manner of things and see what works.",
            "timeStamp": "2022/07/12-22:26:08",
            "id": "ifyfxua",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifycx5v",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ifycx5v": {
            "comment": "Yea no problem. \n\nWhen it comes to execution history backchecking, like your calling it, ML is not really applied. There\u2019s nothing to translate or interpret. Basically just check a later identified hash against your execution list and whoops, we executed malware.\n\nTypically ML would be applied in two scenario pertaining to turning unknown software into known/identified malware. \n\nTake a case where a binary is packed, has file headers that don\u2019t align with true file size, packed syscalls table lookups for windows apis, or sequences that have previously been deemed \u2018malicious\u2019 (aka signatures) or otherwise \u2018weird shit\u2019. Before you ever open/execute it, a ML model could identify with okay accuracy that the file may contain malicious actions. Again BEFORE running it. This is called \u201cstatic analysis\u201d. \n\nNow dynamic analysis is basically executing it in a controlled and monitored environment, typically called sand boxing. This method is very accurate as the malicious software will execute clearly malicious activities like connecting to C2 channels, downloading previously identified malware, setting auto run/ boot persistence, etc.\n\nStatic analysis suffers from advanced obfuscation, and other techniques to avoid easily reverse engineering, as well as false positives. Packing, polymorphism, canary traps, etc are all methods pretty common for threat hunters to avoid when reversing. False positive rates are high too. \n\nDynamic analysis suffers from VM detection methods and again obfuscation of code. The nice thing is when you execute the code ultimately it ends up as machine readable instructions (it has to) and you can always work backwards from there.\n\nOALabs does some great work on reverse engineering malware if your interested. Most days people use a service that does this for them (mostly automated and provided as a SaaS).",
            "timeStamp": "2022/07/12-21:53:35",
            "id": "ifycx5v",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifxynih",
            "score": 1,
            "stickied": false,
            "author_name": "TastyRobot21"
        },
        "ify7a0o": {
            "comment": "No worries, I appreciate your tips, thank you!",
            "timeStamp": "2022/07/12-20:58:19",
            "id": "ify7a0o",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ify40tp",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ify678x": {
            "comment": "[criminalip.io](https://criminalip.io) featuring attack surface management",
            "timeStamp": "2022/07/12-20:48:25",
            "id": "ify678x",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t3_vxizw2",
            "score": 1,
            "stickied": false,
            "author_name": "Late_Ice_9288"
        },
        "ify40tp": {
            "comment": "Again apologies for tail clipping you when it really was not the question you asked. I just had to explain to my 20 something genius that what he was being taught in class was absolutely incorrect on a similar but not similar topic. If you like do a search for reverse malware engineering methods as a good start and that can be helpful for some static and dynamic checking of activity performed",
            "timeStamp": "2022/07/12-20:29:23",
            "id": "ify40tp",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ify3g0e",
            "score": 1,
            "stickied": false,
            "author_name": "NoAssumption205"
        },
        "ify3g0e": {
            "comment": "Thanks, I'll look into those tools.",
            "timeStamp": "2022/07/12-20:24:25",
            "id": "ify3g0e",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ify2dja",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ify2dja": {
            "comment": "Actually excuse the shape comment before It\u2019s been one of THOSE days if you catch my meaning. Regshot and procDOT are good to use when trying to understand what\u2019s happening before execution.\nOnly do this in a sandboxed disconnect device or vm to GM isolation network with wire shark running also during.",
            "timeStamp": "2022/07/12-20:15:26",
            "id": "ify2dja",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ify0uke",
            "score": 1,
            "stickied": false,
            "author_name": "NoAssumption205"
        },
        "ify1pvr": {
            "comment": "We all have our methods to do testing and REM that are similar.",
            "timeStamp": "2022/07/12-20:09:54",
            "id": "ify1pvr",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ify0uke",
            "score": 1,
            "stickied": false,
            "author_name": "NoAssumption205"
        },
        "ify0uke": {
            "comment": "And when a new one gets discovered I run the backtest for it on the execution history that u/TastyRobot21 is talking about, right?",
            "timeStamp": "2022/07/12-20:02:47",
            "id": "ify0uke",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ify058t",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ify058t": {
            "comment": "It\u2019s called a ZERO day for a reason",
            "timeStamp": "2022/07/12-19:56:59",
            "id": "ify058t",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t3_vxizw2",
            "score": 1,
            "stickied": false,
            "author_name": "NoAssumption205"
        },
        "ifxysin": {
            "comment": "Will take a look, thanks!",
            "timeStamp": "2022/07/12-19:46:07",
            "id": "ifxysin",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifxw5ij",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ifxynih": {
            "comment": "Appreciate it, thanks.\n\nI was just looking at Splunkbase and noticed they have a machine learning toolkit for outlier detection which seems interesting.  Now I'm going down an ML rabbit hole but I'm sure what you said still applies, someone out there must be doing it well already.",
            "timeStamp": "2022/07/12-19:45:00",
            "id": "ifxynih",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifxejiy",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ifxw5ij": {
            "comment": "Check out Stairwell Inc.  They ingest every single executable file into their SaaS platform, store for 12 months (immutable store), and continually run a battery of research grade analysis over them to surface threats that bypassed point in time defended.",
            "timeStamp": "2022/07/12-19:25:18",
            "id": "ifxw5ij",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t3_vxizw2",
            "score": 1,
            "stickied": false,
            "author_name": "SaaSie"
        },
        "ifxejiy": {
            "comment": "Your absolutely right. \nHashes can be used as a identification of a certain file. If the file self modified (polymorphic behaviour) its making new files so it\u2019s still valid to say hashes are a fingerprint of a file not of a malware \u201cfamily\u201d. Static/dynamic analysis comes into play there. \n\nYes by recording (typically by hooking syscalls for read and execute) a hosts execution history, later detection of malware by hash can be \u201cchecked\u201d against execution history.\n\nI work with some vendor/enterprise software that does this (EDR/Endpoint protection stuff).",
            "timeStamp": "2022/07/12-17:11:33",
            "id": "ifxejiy",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t3_vxizw2",
            "score": 1,
            "stickied": false,
            "author_name": "TastyRobot21"
        },
        "ifx5dy2": {
            "comment": "And always be in a drake, right?",
            "timeStamp": "2022/07/12-16:04:14",
            "id": "ifx5dy2",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifwu83a",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ifwu83a": {
            "comment": "Always remember to hold cloak and check Local after coming through a gate. :)",
            "timeStamp": "2022/07/12-14:45:10",
            "id": "ifwu83a",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifwpz60",
            "score": 1,
            "stickied": false,
            "author_name": "Chongulator"
        },
        "ifwtdop": {
            "comment": "I'd suggest Sysmon and tools that do full packet capture. Then maybe some EDR tools to increase visibility. But what you really need are trained/skilled analysts who know what they are doing. Installing a tool does by itself not solve your problem.",
            "timeStamp": "2022/07/12-14:39:27",
            "id": "ifwtdop",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifwpz60",
            "score": 1,
            "stickied": false,
            "author_name": "GoranLind"
        },
        "ifwpz60": {
            "comment": "That's great, thanks.  \n\nAre there any tools you can recommend that lead the way in handling any of this or is it a case of doing it all manually?",
            "timeStamp": "2022/07/12-14:16:35",
            "id": "ifwpz60",
            "is_submitter": true,
            "link_id": "t3_vxizw2",
            "parent_id": "t1_ifwd6hb",
            "score": 1,
            "stickied": false,
            "author_name": "EVE-Tekka"
        },
        "ifwd6hb": {
            "comment": "Hashes are useless since files are changed and downloaded all the time.\n\nDNS Traffic to new + unknown sites and new and unique filenames that show up as processes are generally a good way to go. Those are very crude tools to detect malware, but they do the job. If you got Powershell script block logging, that's a good thing, same goes for new Mutexes, Processes with startup path in %appdata% or %temp%, execution of LoLbins, Irregular Parent process -&gt; Process hierarchies, Creation of scheduled tasks for persistence, Unexpected disabling/termination of security tools - but that kind of visibility is probably expecting too much from companies even in 2022.",
            "timeStamp": "2022/07/12-12:53:26",
            "id": "ifwd6hb",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t3_vxizw2",
            "score": 1,
            "stickied": false,
            "author_name": "GoranLind"
        },
        "ifw96oe": {
            "comment": "Virustotal.  Upload suspected or discovered malware there.",
            "timeStamp": "2022/07/12-12:27:24",
            "id": "ifw96oe",
            "is_submitter": false,
            "link_id": "t3_vxizw2",
            "parent_id": "t3_vxizw2",
            "score": 1,
            "stickied": false,
            "author_name": "TParis00ap"
        }
    }
}